package com.example.myapplication;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import java.text.BreakIterator;
import java.text.DecimalFormat;

public class MainActivity extends AppCompatActivity
{
    private static final char ADDITION = '+';
    private static final char SUBTRACTION = '-';
    private static final char MULTIPLICATION = '*';
    private static final char DIVISION = '/';
    private char currentSymbol;
    private double firstValue = Double.NaN;
    private double secondValue;
    private DecimalFormat decimalFormat;
    TextView txt1,ans;
    Button b1,b2,b3,b4,b5,b6,b7,b8,b9,b0,ba,bs,bm,bd,bc,be;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        decimalFormat = new DecimalFormat("#.##########");
        txt1 = (TextView) findViewById(R.id.txt1);
        ans = (TextView) findViewById(R.id.ans);
        b1 = (Button) findViewById(R.id.b1);
        b2 = (Button) findViewById(R.id.b2);
        b3 = (Button) findViewById(R.id.b3);
        b4 = (Button) findViewById(R.id.b4);
        b5 = (Button) findViewById(R.id.b5);
        b6 = (Button) findViewById(R.id.b6);
        b7 = (Button) findViewById(R.id.b7);
        b8 = (Button) findViewById(R.id.b8);
        b9 = (Button) findViewById(R.id.b9);
        b0 = (Button) findViewById(R.id.b0);
        ba = (Button) findViewById(R.id.ba);
        bs = (Button) findViewById(R.id.bs);
        bm = (Button) findViewById(R.id.bm);
        bd = (Button) findViewById(R.id.bd);
        bc = (Button) findViewById(R.id.bc);
        be = (Button) findViewById(R.id.be);

        b1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txt1.setText(txt1.getText() + "1");
            }
        });

        b2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txt1.setText(txt1.getText() + "2");
            }
        });

        b3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txt1.setText(txt1.getText() + "3");
            }
        });

        b4.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txt1.setText(txt1.getText() + "4");
            }
        });

        b5.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txt1.setText(txt1.getText() + "5");
            }
        });

        b6.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txt1.setText(txt1.getText() + "6");
            }
        });

        b7.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txt1.setText(txt1.getText() + "7");
            }
        });

        b8.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txt1.setText(txt1.getText() + "8");
            }
        });

        b9.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txt1.setText(txt1.getText() + "9");
            }
        });
        b0.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txt1.setText(txt1.getText() + "0");
            }
        });

        bc.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (txt1.getText().length() > 0) {
                    CharSequence currentText = txt1.getText();
                    txt1.setText(currentText.subSequence(0, currentText.length() - 1));
                } else {
                    txt1.setText("");
                    ans.setText("");
                }
            }
        });

        be.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ans.setText(decimalFormat.format(firstValue));
                firstValue = Double.NaN;
                currentSymbol = '0';
            }
        });

        ba.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                allCalculations();
                currentSymbol = ADDITION;
                ans.setText(decimalFormat.format(firstValue) + "+");
                txt1.setText(null);
            }
        });
        bs.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                allCalculations();
                currentSymbol = SUBTRACTION;
                ans.setText(decimalFormat.format(firstValue) + "-");
                txt1.setText(null);
            }
        });
        bm.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                allCalculations();
                currentSymbol = MULTIPLICATION;
                ans.setText(decimalFormat.format(firstValue) + "x");
                txt1.setText(null);
            }
        });
        bd.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                allCalculations();
                currentSymbol = DIVISION;
                ans.setText(decimalFormat.format(firstValue) + "/");
                txt1.setText(null);
            }
        });
    }

        private void allCalculations(){
            if (!Double.isNaN(firstValue))
            {
                secondValue = Double.parseDouble(txt1.getText().toString());
                txt1.setText(null);
                if (currentSymbol == ADDITION)
                    firstValue = this.firstValue + secondValue;
                else if (currentSymbol == SUBTRACTION)
                    firstValue = this.firstValue - secondValue;
                else if (currentSymbol == MULTIPLICATION)
                    firstValue = this.firstValue * secondValue;
                else if (currentSymbol == DIVISION)
                    firstValue = this.firstValue / secondValue;
            }
            else
            {
                try
                {
                    firstValue = Double.parseDouble(txt1.getText().toString());
                }
                catch (Exception e)
                {
                }
            }
        }



}
